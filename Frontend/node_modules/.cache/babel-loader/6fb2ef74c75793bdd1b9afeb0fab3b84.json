{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useGeoPosition = (key, address) => {\n  const [position, setPosition] = useState({\n    lat: null,\n    lng: null\n  });\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const fetchLatandLng = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${key}`);\n      const result = res.data.results[0].geometry.location;\n\n      if (result.lat !== null && result.lng !== null) {\n        setPosition({\n          lat: result.lat,\n          lng: result.lng\n        });\n      } else {\n        setError(true);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchLatandLng();\n  }, [address]);\n  return [position, loading, error];\n};\n\nexport default useGeoPosition;","map":{"version":3,"sources":["/home/jonathan/Escritorio/semifun/proyectoBases/Frontend/src/components/Map.js"],"names":["React","useState","useEffect","axios","useGeoPosition","key","address","position","setPosition","lat","lng","error","setError","loading","setLoading","fetchLatandLng","res","get","result","data","results","geometry","location"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACI,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAAEQ,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAAD,CAAxC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,cAAc,GAAG,YAAY;AACjC,QAAI;AACED,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,6DAA4DX,OAAQ,QAAOD,GAAI,EAA1F,CAAlB;AACA,YAAMa,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA5C;;AAEA,UAAIJ,MAAM,CAACT,GAAP,KAAe,IAAf,IAAuBS,MAAM,CAACR,GAAP,KAAe,IAA1C,EAAgD;AAC9CF,QAAAA,WAAW,CAAC;AAACC,UAAAA,GAAG,EAAES,MAAM,CAACT,GAAb;AAAkBC,UAAAA,GAAG,EAAEQ,MAAM,CAACR;AAA9B,SAAD,CAAX;AACD,OAFD,MAGK;AACHE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAZH,CAaA,OAAOH,KAAP,EAAc;AACXG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACF;AACF,GAlBD;;AAqBAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACT,OAAD,CAFM,CAAT;AAIA,SAAO,CAACC,QAAD,EAAWM,OAAX,EAAoBF,KAApB,CAAP;AACD,CA/BD;;AAiCA,eAAeP,cAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\n    import axios from 'axios';\n\n    const useGeoPosition = (key, address) => {\n      const [position, setPosition] = useState({ lat: null, lng: null });\n      const [error, setError] = useState(false);\n      const [loading, setLoading] = useState(false);\n\n      const fetchLatandLng = async () => {\n        try {\n              setLoading(true);\n              const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${key}`);\n              const result = res.data.results[0].geometry.location;\n\n              if (result.lat !== null && result.lng !== null) {\n                setPosition({lat: result.lat, lng: result.lng})\n              }\n              else {\n                setError(true);\n              }\n              setLoading(false);\n          }\n        catch (error) {\n           setLoading(false);\n           setError(true);\n        }\n      }\n\n\n      useEffect(() => {\n        fetchLatandLng();\n      }, [address])\n\n      return [position, loading, error]\n    }\n\n    export default useGeoPosition;\n"]},"metadata":{},"sourceType":"module"}